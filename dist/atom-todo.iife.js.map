{"version":3,"file":"atom-todo.iife.js","sources":["../src/index.js","../src/item.js","../src/input.js"],"sourcesContent":["import { h, Element } from \"atomico\";\nimport TagInput from \"./input\";\nimport TagItem from \"./item\";\nimport item from \"./item\";\n\nexport const TAG_TODO = \"atom-todo\";\nexport const TAG_ITEM = \"atom-todo-item\";\nexport const TAG_INPUT = \"atom-todo-input\";\n\nexport default class TagTodo extends Element {\n    constructor() {\n        super();\n        this.attachShadow({ mode: \"open\" });\n        this.state.list = [\n            { text: \"my initial todo\", checked: false },\n            { text: \"Learn about Web Components\", checked: true }\n        ];\n    }\n    styled() {\n        return `\n            :host{\n                width : 100%;\n                display:block;\n                box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 25px 50px 0 rgba(0, 0, 0, 0.1);\n            }\n            .group{\n                background : white;\n            }\n        `;\n    }\n    render() {\n        let { list = [] } = this.state;\n        return (\n            <div class=\"group\">\n                <style>{this.styled()}</style>\n                <atom-todo-input\n                    placeholder=\"What needs to be done?\"\n                    create={({ detail }) => {\n                        this.setState({\n                            list: list.concat({\n                                text: detail.text,\n                                checked: false\n                            })\n                        });\n                    }}\n                />\n                <div>\n                    {list.map(({ text, checked }, localIndex) => (\n                        <atom-todo-item\n                            text={text}\n                            checked={checked}\n                            remove={() => {\n                                this.setState({\n                                    list: list.filter(\n                                        (data, index) => index !== localIndex\n                                    )\n                                });\n                            }}\n                            toggle={() => {\n                                this.setState({\n                                    list: list.map(\n                                        (data, index) =>\n                                            index === localIndex\n                                                ? {\n                                                      ...data,\n                                                      checked: !data.checked\n                                                  }\n                                                : data\n                                    )\n                                });\n                            }}\n                        />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\ncustomElements.define(TAG_ITEM, TagItem);\ncustomElements.define(TAG_INPUT, TagInput);\ncustomElements.define(TAG_TODO, TagTodo);\n","import { h, Element } from \"atomico\";\r\n\r\nexport default class extends Element {\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: \"open\" });\r\n    }\r\n    static get props() {\r\n        return [\"text\", \"checked\"];\r\n    }\r\n    styled() {\r\n        return `\r\n            input{\r\n                text-align: center;\r\n                border: none;\r\n                /* Mobile Safari */\r\n                -webkit-appearance: none;\r\n                appearance: none;\r\n                padding: .2rem .5rem;\r\n                outline:none;\r\n            }\r\n            input:after{\r\n                content: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 100 100\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#ededed\" stroke-width=\"3\"/></svg>');\r\n            }\r\n            input:checked:after {\r\n                content: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"-0 0 100 100\"><circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"none\" stroke=\"#bddad5\" stroke-width=\"3\"/><path fill=\"#5dc2af\" d=\"M72 25L42 71 27 56l-4 4 20 20 34-52z\"/></svg>');\r\n            }\r\n            input:checked~.text{\r\n                color: #d9d9d9;\r\n                text-decoration: line-through;\r\n            }\r\n            .group{\r\n                display:flex;\r\n                align-items:center;\r\n            }\r\n            .text{\r\n                flex:0%;\r\n                padding : 1rem;\r\n                font-size: 24px;\r\n                text-align:left;\r\n            }\r\n            button{\r\n                color: #cc9a9a;\r\n                background:none;\r\n                border:0;\r\n                font-size : 30px;\r\n                margin-right:1rem;\r\n            }\r\n        `;\r\n    }\r\n    render() {\r\n        return (\r\n            <div class=\"group\">\r\n                <style>{this.styled()}</style>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    change={() => {\r\n                        this.dispatch(\"toggle\");\r\n                    }}\r\n                    checked={this.props.checked}\r\n                />\r\n                <div class=\"text\">{this.props.text}</div>\r\n                <button\r\n                    click={() => {\r\n                        this.dispatch(\"remove\");\r\n                    }}\r\n                >\r\n                    x\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { h, Element } from \"atomico\";\r\n\r\nexport default class extends Element {\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: \"open\" });\r\n    }\r\n    static get props() {\r\n        return [\"placeholder\"];\r\n    }\r\n    styled() {\r\n        return `\r\n        input{\r\n            background: rgba(0, 0, 0, 0.003);\r\n            width: 100%;\r\n            font-size: 24px;\r\n            color: inherit;\r\n            padding: 6px;\r\n            border: 1px solid #CCC;\r\n            box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\r\n            box-sizing: border-box;\r\n        }\r\n        `;\r\n    }\r\n    render() {\r\n        return (\r\n            <form\r\n                submit={event => {\r\n                    event.preventDefault();\r\n                    this.dispatch(\"create\", {\r\n                        text: event.target.task.value\r\n                    });\r\n                    event.target.reset();\r\n                }}\r\n            >\r\n                <style>{this.styled()}</style>\r\n                <input\r\n                    name=\"task\"\r\n                    type=\"text\"\r\n                    placeholder={this.props.placeholder}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n"],"names":["TagTodo","Element","[object Object]","super","this","attachShadow","mode","state","list","text","checked","h","class","styled","placeholder","create","ref","setState","concat","detail","map","localIndex","remove","filter","data","index","toggle","Object","customElements","define","props","type","change","dispatch","click","submit","event","preventDefault","target","task","value","reset","name"],"mappings":"wCASe,MAAMA,UAAgBC,UACjCC,cACIC,QACAC,KAAKC,aAAa,CAAEC,KAAM,SAC1BF,KAAKG,MAAMC,KAAO,CACd,CAAEC,KAAM,kBAAmBC,SAAS,GACpC,CAAED,KAAM,6BAA8BC,SAAS,IAGvDR,SACI,MAAO,uRAWXA,sBACwBE,KAAKG,WACzB,sBADa,IAETI,WAAKC,MAAM,SACPD,iBAAQP,KAAKS,UACbF,uBACIG,YAAY,yBACZC,gBAASC,kBACLZ,EAAKa,SAAS,CACVT,KAAMA,EAAKU,OAAO,CACdT,KAAMU,EAAOV,KACbC,SAAS,SAKzBC,eACIH,EAAMY,aAAKJ,EAAmBK,mCAC1BV,sBACIF,KAAMA,EACNC,QAASA,EACTY,kBACIlB,EAAKa,SAAS,CACVT,KAAMA,EAAKe,gBACNC,EAAMC,UAAUA,IAAUJ,OAIvCK,kBACItB,EAAKa,SAAS,CACVT,KAAMA,EAAKY,aACNI,EAAMC,UACHA,IAAUJ,EACJM,iBACOH,GACHd,SAAUc,EAAKd,UAEnBc,qBAYlDI,eAAeC,OAzES,iBCJT,cAAc5B,UACzBC,cACIC,QACAC,KAAKC,aAAa,CAAEC,KAAM,SAE9BwB,mBACI,MAAO,CAAC,OAAQ,WAEpB5B,SACI,MAAO,y+CAuCXA,oBACI,OACIS,WAAKC,MAAM,SACPD,iBAAQP,KAAKS,UACbF,aACIoB,KAAK,WACLC,kBACI5B,EAAK6B,SAAS,WAElBvB,QAASN,KAAK0B,MAAMpB,UAExBC,WAAKC,MAAM,QAAQR,KAAK0B,MAAMrB,MAC9BE,cACIuB,iBACI9B,EAAK6B,SAAS,YAErB,SDcjBL,eAAeC,OAzEU,kBELV,cAAc5B,UACzBC,cACIC,QACAC,KAAKC,aAAa,CAAEC,KAAM,SAE9BwB,mBACI,MAAO,CAAC,eAEZ5B,SACI,MAAO,iVAaXA,oBACI,OACIS,YACIwB,gBAAQC,GACJA,EAAMC,iBACNjC,EAAK6B,SAAS,SAAU,CACpBxB,KAAM2B,EAAME,OAAOC,KAAKC,QAE5BJ,EAAME,OAAOG,UAGjB9B,iBAAQP,KAAKS,UACbF,aACI+B,KAAK,OACLX,KAAK,OACLjB,YAAaV,KAAK0B,MAAMhB,kBF0C5Cc,eAAeC,OA5ES,YA4EQ7B,cA5ER,uBACA,6BACC"}