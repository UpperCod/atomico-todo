"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var atomico=require("atomico");class TagInput extends atomico.Element{constructor(){super(),this.attachShadow({mode:"open"})}static get props(){return["placeholder"]}styled(){return"\n        input{\n            background: rgba(0, 0, 0, 0.003);\n            width: 100%;\n            font-size: 24px;\n            color: inherit;\n            padding: 6px;\n            border: 1px solid #CCC;\n            box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n            box-sizing: border-box;\n        }\n        "}render(){var t=this;return atomico.h("form",{submit:function(e){e.preventDefault(),t.dispatch("create",{text:e.target.task.value}),e.target.reset()}},atomico.h("style",null,this.styled()),atomico.h("input",{name:"task",type:"text",placeholder:this.props.placeholder}))}}class TagItem extends atomico.Element{constructor(){super(),this.attachShadow({mode:"open"})}static get props(){return["text","checked"]}styled(){return'\n            input{\n                text-align: center;\n                border: none;\n                /* Mobile Safari */\n                -webkit-appearance: none;\n                appearance: none;\n                padding: .2rem .5rem;\n                outline:none;\n            }\n            input:after{\n                content: url(\'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 100 100"><circle cx="50" cy="50" r="50" fill="none" stroke="#ededed" stroke-width="3"/></svg>\');\n            }\n            input:checked:after {\n                content: url(\'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="-0 0 100 100"><circle cx="50" cy="50" r="50" fill="none" stroke="#bddad5" stroke-width="3"/><path fill="#5dc2af" d="M72 25L42 71 27 56l-4 4 20 20 34-52z"/></svg>\');\n            }\n            input:checked~.text{\n                color: #d9d9d9;\n                text-decoration: line-through;\n            }\n            .group{\n                display:flex;\n                align-items:center;\n            }\n            .text{\n                flex:0%;\n                padding : 1rem;\n                font-size: 24px;\n                text-align:left;\n            }\n            button{\n                color: #cc9a9a;\n                background:none;\n                border:0;\n                font-size : 30px;\n                margin-right:1rem;\n            }\n        '}render(){var t=this;return atomico.h("div",{class:"group"},atomico.h("style",null,this.styled()),atomico.h("input",{type:"checkbox",change:function(){t.dispatch("toggle")},checked:this.props.checked}),atomico.h("div",{class:"text"},this.props.text),atomico.h("button",{click:function(){t.dispatch("remove")}},"x"))}}var TAG_TODO="atom-todo",TAG_ITEM="atom-todo-item",TAG_INPUT="atom-todo-input";class TagTodo extends atomico.Element{constructor(){super(),this.attachShadow({mode:"open"}),this.state.list=[{text:"my initial todo",checked:!1},{text:"Learn about Web Components",checked:!0}]}styled(){return"\n            :host{\n                width : 100%;\n                display:block;\n                box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 25px 50px 0 rgba(0, 0, 0, 0.1);\n            }\n            .group{\n                background : white;\n            }\n        "}render(){var t=this,e=this.state.list;return void 0===e&&(e=[]),atomico.h("div",{class:"group"},atomico.h("style",null,this.styled()),atomico.h("atom-todo-input",{placeholder:"What needs to be done?",create:function(n){var o=n.detail;t.setState({list:e.concat({text:o.text,checked:!1})})}}),atomico.h("div",null,e.map(function(n,o){var a=n.text,i=n.checked;return atomico.h("atom-todo-item",{text:a,checked:i,remove:function(){t.setState({list:e.filter(function(t,e){return e!==o})})},toggle:function(){t.setState({list:e.map(function(t,e){return e===o?Object.assign({},t,{checked:!t.checked}):t})})}})})))}}customElements.define(TAG_ITEM,TagItem),customElements.define(TAG_INPUT,TagInput),customElements.define(TAG_TODO,TagTodo),exports.TAG_TODO=TAG_TODO,exports.TAG_ITEM=TAG_ITEM,exports.TAG_INPUT=TAG_INPUT,exports.default=TagTodo;
//# sourceMappingURL=atom-todo.js.map
